name: frontend License & Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  scan_frontend:  #Job1
    name: Scan frontend Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # - name: Install Project Dependencies
      #   run: npm install $GITHUB_WORKSPACE/frontend

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # - name: Install ScanCode Dependencies
      #   run: |
      #     sudo apt-get update && sudo apt-get upgrade -y
      #     sudo apt install -y bzip2 xz-utils zlib1g libxml2-dev libxslt1-dev libpopt0

      - name: Download and Extract ScanCode Toolkit v32.0.8
        run: |
          wget https://github.com/aboutcode-org/scancode-toolkit/releases/download/v32.0.8/scancode-toolkit-v32.0.8_py3.10-linux.tar.gz
          tar -xzf scancode-toolkit-v32.0.8_py3.10-linux.tar.gz
          mv scancode-toolkit-v32.0.8 scancode-toolkit
          chmod +x scancode-toolkit/scancode
          chmod +x scancode-toolkit/configure

      - name: Configure ScanCode Toolkit
        run: |
          cd scancode-toolkit
          ./configure

      - name: Verify Python Version
        run: python --version

      - name: Run ScanCode on frontend Folder
        run: |
          cd scancode-toolkit
          # ./scancode --json scancode-results.json ../frontend
          ./scancode  --copyright -n 2 --json ../scancode-results.json $GITHUB_WORKSPACE/frontend/ || (echo "ScanCode failed!" && exit 1)
          
      - name: Debug - Check if results file exists
        run: ls -l scancode-results.json || echo "scancode-results.json NOT FOUND"

      - name: Run Copyright Extraction and Send to Google Chat
        run: |
          jq -c '[.files[]
            | {path, copyrights: [.copyrights[] | {text: "<b>Copyright:</b> \(.copyright) <br><b>Line:</b> \(.start_line)"}]}
            | select(.copyrights != [])
          ]' scancode-results.json | jq -c '. as $all | reduce range(0; length; 10) as $i ([]; . + [$all[$i:$i+10]])' > chunks.json

          jq -c '.[]' chunks.json | while read -r chunk; do
            MESSAGE_JSON=$(jq -nc --argjson chunk "$chunk" '{
              cardsV2: [{
                cardId: "copyright_report",
                card: {
                  header: {
                    title: "Copyright Report",
                    subtitle: "Extracted Copyright Information"
                  },
                  sections: [
                    {
                      widgets: [
                        {
                          textParagraph: {
                            text: (
                              [$chunk[]
                                | "<b>URL:</b> <a href='${{ github.server_url }}/${{ github.repository }}/\(.path)\'>Click Here</a><br>\(.copyrights[].text)"]
                              | join("<br><br>")
                            )
                          }
                        }
                      ]
                    }
                  ]
                }
              }]
            }')

            curl -X POST -H "Content-Type: application/json" -d "$MESSAGE_JSON" "${{ secrets.GOOGLE_WEBHOOK }}"

            sleep 1  # Prevents rate limiting
          done


      # - name: Upload Scan Results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: scancode-results
      #     path: scancode-results.json
      # - name: Download Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: scancode-results
      # - name: Display structure of downloaded files
      #   run: ls -R

  # download_artifacts: #Job2
  #   needs: scan_frontend
  #   runs-on: ubuntu-latest
  #   name: Download Artifacts
  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: scancode-results
  #     - name: Display Output
  #       run: |
  #         ls -la $GITHUB_WORKSPACE
  #         cat $GITHUB_WORKSPACE/scancode-results.json
  #     - name: Display Output after filtering
  #       run: cat $GITHUB_WORKSPACE/scancode-results.json | jq '.files[] | select((.copyrights | length > 0)) | {path, copyrights}' | tee scancode_results.json
  #     - name: Send data to WebHook
  #       run: curl -X POST -H 'Content-Type:application/json' -d `cat $GITHUB_WORKSPACE/scancode-results.json | jq '.files[] | select((.copyrights | length > 0)) | {path, copyrights}'` "https://chat.googleapis.com/v1/spaces/AAAAiHLUdQk/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=jRNaHg-WTR_vKN1zXBtY1v4EvYlLUfWJ-4EDEC6C3ao"
  #       # run: echo ${{ secrets.GOOGLE }}
        
    
    
    
          


